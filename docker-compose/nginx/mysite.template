map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream front {
    server ${FRONT_IP}:${FRONT_PORT};
}
upstream back {
    server ${BACK_IP}:${BACK_PORT};
}

server {
    listen 0.0.0.0:80;
    charset utf-8;
    
    return 302 https://$host:${NGINX_HOST_PORT_HTTPS}$request_uri;
}

server {
    listen              443 ssl;
    ssl_certificate     cert/site.pem;
    ssl_certificate_key cert/site.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

     location / {
          resolver 127.0.0.1;
          proxy_pass http://front;
          proxy_cookie_path / "/; secure; HttpOnly; SameSite=strict";
          proxy_set_header Host $host:$server_port;
          proxy_set_header X-Forwarded-Host $server_name;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }
     
    location /api/ {
      resolver 127.0.0.1;
      proxy_pass http://back;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /upload/ {
      resolver 127.0.0.1;
      proxy_pass http://back;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

}
